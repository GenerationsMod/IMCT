// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.scvi.flatbuffers.Titan.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class TRPOKECFG extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static TRPOKECFG getRootAsTRPOKECFG(ByteBuffer _bb) { return getRootAsTRPOKECFG(_bb, new TRPOKECFG()); }
  public static TRPOKECFG getRootAsTRPOKECFG(ByteBuffer _bb, TRPOKECFG obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TRPOKECFG __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int unk0() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public float unk1() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk2() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk3() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk4() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk5() { int o = __offset(14); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk6() { int o = __offset(16); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk7() { int o = __offset(18); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk8() { int o = __offset(20); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk9() { int o = __offset(22); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk10() { int o = __offset(24); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk11() { int o = __offset(26); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk12() { int o = __offset(28); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createTRPOKECFG(FlatBufferBuilder builder,
      int unk0,
      float unk1,
      float unk2,
      float unk3,
      float unk4,
      float unk5,
      float unk6,
      float unk7,
      float unk8,
      float unk9,
      float unk10,
      float unk11,
      float unk12) {
    builder.startTable(13);
    TRPOKECFG.addUnk12(builder, unk12);
    TRPOKECFG.addUnk11(builder, unk11);
    TRPOKECFG.addUnk10(builder, unk10);
    TRPOKECFG.addUnk9(builder, unk9);
    TRPOKECFG.addUnk8(builder, unk8);
    TRPOKECFG.addUnk7(builder, unk7);
    TRPOKECFG.addUnk6(builder, unk6);
    TRPOKECFG.addUnk5(builder, unk5);
    TRPOKECFG.addUnk4(builder, unk4);
    TRPOKECFG.addUnk3(builder, unk3);
    TRPOKECFG.addUnk2(builder, unk2);
    TRPOKECFG.addUnk1(builder, unk1);
    TRPOKECFG.addUnk0(builder, unk0);
    return TRPOKECFG.endTRPOKECFG(builder);
  }

  public static void startTRPOKECFG(FlatBufferBuilder builder) { builder.startTable(13); }
  public static void addUnk0(FlatBufferBuilder builder, int unk0) { builder.addByte(0, (byte) unk0, (byte) 0); }
  public static void addUnk1(FlatBufferBuilder builder, float unk1) { builder.addFloat(1, unk1, 0.0f); }
  public static void addUnk2(FlatBufferBuilder builder, float unk2) { builder.addFloat(2, unk2, 0.0f); }
  public static void addUnk3(FlatBufferBuilder builder, float unk3) { builder.addFloat(3, unk3, 0.0f); }
  public static void addUnk4(FlatBufferBuilder builder, float unk4) { builder.addFloat(4, unk4, 0.0f); }
  public static void addUnk5(FlatBufferBuilder builder, float unk5) { builder.addFloat(5, unk5, 0.0f); }
  public static void addUnk6(FlatBufferBuilder builder, float unk6) { builder.addFloat(6, unk6, 0.0f); }
  public static void addUnk7(FlatBufferBuilder builder, float unk7) { builder.addFloat(7, unk7, 0.0f); }
  public static void addUnk8(FlatBufferBuilder builder, float unk8) { builder.addFloat(8, unk8, 0.0f); }
  public static void addUnk9(FlatBufferBuilder builder, float unk9) { builder.addFloat(9, unk9, 0.0f); }
  public static void addUnk10(FlatBufferBuilder builder, float unk10) { builder.addFloat(10, unk10, 0.0f); }
  public static void addUnk11(FlatBufferBuilder builder, float unk11) { builder.addFloat(11, unk11, 0.0f); }
  public static void addUnk12(FlatBufferBuilder builder, float unk12) { builder.addFloat(12, unk12, 0.0f); }
  public static int endTRPOKECFG(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishTRPOKECFGBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedTRPOKECFGBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TRPOKECFG get(int j) { return get(new TRPOKECFG(), j); }
    public TRPOKECFG get(TRPOKECFG obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

