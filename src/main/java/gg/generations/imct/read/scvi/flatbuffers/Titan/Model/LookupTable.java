// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.read.scvi.flatbuffers.Titan.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class LookupTable extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static LookupTable getRootAsLookupTable(ByteBuffer _bb) { return getRootAsLookupTable(_bb, new LookupTable()); }
  public static LookupTable getRootAsLookupTable(ByteBuffer _bb, LookupTable obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public LookupTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String shapeName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer shapeNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer shapeNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3i unk2() { return unk2(new gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3i()); }
  public gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3i unk2(gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3i obj) { int o = __offset(8); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public String meshNames(int j) { int o = __offset(10); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int meshNamesLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public StringVector meshNamesVector() { return meshNamesVector(new StringVector()); }
  public StringVector meshNamesVector(StringVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Table2 baseShape(int j) { return baseShape(new gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Table2(), j); }
  public gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Table2 baseShape(gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Table2 obj, int j) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int baseShapeLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Table2.Vector baseShapeVector() { return baseShapeVector(new gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Table2.Vector()); }
  public gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Table2.Vector baseShapeVector(gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Table2.Vector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3f somePositions(int j) { return somePositions(new gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3f(), j); }
  public gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3f somePositions(gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3f obj, int j) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o) + j * 12, bb) : null; }
  public int somePositionsLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3f.Vector somePositionsVector() { return somePositionsVector(new gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3f.Vector()); }
  public gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3f.Vector somePositionsVector(gg.generations.imct.read.scvi.flatbuffers.Titan.Model.Vec3f.Vector obj) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o), 12, bb) : null; }

  public static void startLookupTable(FlatBufferBuilder builder) { builder.startTable(6); }
  public static void addShapeName(FlatBufferBuilder builder, int shapeNameOffset) { builder.addOffset(0, shapeNameOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addUnk2(FlatBufferBuilder builder, int unk2Offset) { builder.addStruct(2, unk2Offset, 0); }
  public static void addMeshNames(FlatBufferBuilder builder, int meshNamesOffset) { builder.addOffset(3, meshNamesOffset, 0); }
  public static int createMeshNamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMeshNamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addBaseShape(FlatBufferBuilder builder, int baseShapeOffset) { builder.addOffset(4, baseShapeOffset, 0); }
  public static int createBaseShapeVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startBaseShapeVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addSomePositions(FlatBufferBuilder builder, int somePositionsOffset) { builder.addOffset(5, somePositionsOffset, 0); }
  public static void startSomePositionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(12, numElems, 4); }
  public static int endLookupTable(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public LookupTable get(int j) { return get(new LookupTable(), j); }
    public LookupTable get(LookupTable obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

