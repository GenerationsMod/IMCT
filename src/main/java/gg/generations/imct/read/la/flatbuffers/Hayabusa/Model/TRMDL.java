// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.read.la.flatbuffers.Hayabusa.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class TRMDL extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static TRMDL getRootAsTRMDL(ByteBuffer _bb) { return getRootAsTRMDL(_bb, new TRMDL()); }
  public static TRMDL getRootAsTRMDL(ByteBuffer _bb, TRMDL obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TRMDL __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long unk0() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference meshes(int j) { return meshes(new gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference(), j); }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference meshes(gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int meshesLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference.Vector meshesVector() { return meshesVector(new gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference.Vector()); }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference.Vector meshesVector(gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference.Vector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference skeleton() { return skeleton(new gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference()); }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference skeleton(gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.FileReference obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public String materials(int j) { int o = __offset(10); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int materialsLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public StringVector materialsVector() { return materialsVector(new StringVector()); }
  public StringVector materialsVector(StringVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.LOD lods(int j) { return lods(new gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.LOD(), j); }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.LOD lods(gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.LOD obj, int j) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int lodsLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.LOD.Vector lodsVector() { return lodsVector(new gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.LOD.Vector()); }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.LOD.Vector lodsVector(gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.LOD.Vector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.AABB bounds() { return bounds(new gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.AABB()); }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.AABB bounds(gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.AABB obj) { int o = __offset(14); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.Sphere spericalBounds() { return spericalBounds(new gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.Sphere()); }
  public gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.Sphere spericalBounds(gg.generations.imct.read.la.flatbuffers.Hayabusa.Model.Sphere obj) { int o = __offset(16); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void startTRMDL(FlatBufferBuilder builder) { builder.startTable(7); }
  public static void addUnk0(FlatBufferBuilder builder, long unk0) { builder.addInt(0, (int) unk0, (int) 0L); }
  public static void addMeshes(FlatBufferBuilder builder, int meshesOffset) { builder.addOffset(1, meshesOffset, 0); }
  public static int createMeshesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMeshesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addSkeleton(FlatBufferBuilder builder, int skeletonOffset) { builder.addOffset(2, skeletonOffset, 0); }
  public static void addMaterials(FlatBufferBuilder builder, int materialsOffset) { builder.addOffset(3, materialsOffset, 0); }
  public static int createMaterialsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMaterialsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addLods(FlatBufferBuilder builder, int lodsOffset) { builder.addOffset(4, lodsOffset, 0); }
  public static int createLodsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startLodsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addBounds(FlatBufferBuilder builder, int boundsOffset) { builder.addOffset(5, boundsOffset, 0); }
  public static void addSpericalBounds(FlatBufferBuilder builder, int spericalBoundsOffset) { builder.addStruct(6, spericalBoundsOffset, 0); }
  public static int endTRMDL(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishTRMDLBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedTRMDLBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TRMDL get(int j) { return get(new TRMDL(), j); }
    public TRMDL get(TRMDL obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

