// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.read.la.flatbuffers.Hayabusa.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class LODIndex extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static LODIndex getRootAsLODIndex(ByteBuffer _bb) { return getRootAsLODIndex(_bb, new LODIndex()); }
  public static LODIndex getRootAsLODIndex(ByteBuffer _bb, LODIndex obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public LODIndex __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long index() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createLODIndex(FlatBufferBuilder builder,
      long index) {
    builder.startTable(1);
    LODIndex.addIndex(builder, index);
    return LODIndex.endLODIndex(builder);
  }

  public static void startLODIndex(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addIndex(FlatBufferBuilder builder, long index) { builder.addInt(0, (int) index, (int) 0L); }
  public static int endLODIndex(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public LODIndex get(int j) { return get(new LODIndex(), j); }
    public LODIndex get(LODIndex obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

