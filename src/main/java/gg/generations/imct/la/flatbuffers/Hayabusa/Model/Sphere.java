// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.la.flatbuffers.Hayabusa.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Sphere extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Sphere __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gg.generations.imct.la.flatbuffers.Hayabusa.Model.Vec3 center() { return center(new gg.generations.imct.la.flatbuffers.Hayabusa.Model.Vec3()); }
  public gg.generations.imct.la.flatbuffers.Hayabusa.Model.Vec3 center(gg.generations.imct.la.flatbuffers.Hayabusa.Model.Vec3 obj) { return obj.__assign(bb_pos + 0, bb); }
  public float radius() { return bb.getFloat(bb_pos + 12); }

  public static int createSphere(FlatBufferBuilder builder, float center_x, float center_y, float center_z, float radius) {
    builder.prep(4, 16);
    builder.putFloat(radius);
    builder.prep(4, 12);
    builder.putFloat(center_z);
    builder.putFloat(center_y);
    builder.putFloat(center_x);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Sphere get(int j) { return get(new Sphere(), j); }
    public Sphere get(Sphere obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}

