// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.swsh.flatbuffers.Gfbmdl;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Model extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static Model getRootAsModel(ByteBuffer _bb) { return getRootAsModel(_bb, new Model()); }
  public static Model getRootAsModel(ByteBuffer _bb, Model obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Model __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long version() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.BoundingBox bounding() { return bounding(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.BoundingBox()); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.BoundingBox bounding(gg.generations.imct.swsh.flatbuffers.Gfbmdl.BoundingBox obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public String textureNames(int j) { int o = __offset(8); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int textureNamesLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public StringVector textureNamesVector() { return textureNamesVector(new StringVector()); }
  public StringVector textureNamesVector(StringVector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public String shaderNames(int j) { int o = __offset(10); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int shaderNamesLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public StringVector shaderNamesVector() { return shaderNamesVector(new StringVector()); }
  public StringVector shaderNamesVector(StringVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.UnknownEmpty unknown(int j) { return unknown(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.UnknownEmpty(), j); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.UnknownEmpty unknown(gg.generations.imct.swsh.flatbuffers.Gfbmdl.UnknownEmpty obj, int j) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int unknownLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.UnknownEmpty.Vector unknownVector() { return unknownVector(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.UnknownEmpty.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.UnknownEmpty.Vector unknownVector(gg.generations.imct.swsh.flatbuffers.Gfbmdl.UnknownEmpty.Vector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public String materialNames(int j) { int o = __offset(14); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int materialNamesLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }
  public StringVector materialNamesVector() { return materialNamesVector(new StringVector()); }
  public StringVector materialNamesVector(StringVector obj) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Material materials(int j) { return materials(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.Material(), j); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Material materials(gg.generations.imct.swsh.flatbuffers.Gfbmdl.Material obj, int j) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int materialsLength() { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Material.Vector materialsVector() { return materialsVector(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.Material.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Material.Vector materialsVector(gg.generations.imct.swsh.flatbuffers.Gfbmdl.Material.Vector obj) { int o = __offset(16); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Group groups(int j) { return groups(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.Group(), j); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Group groups(gg.generations.imct.swsh.flatbuffers.Gfbmdl.Group obj, int j) { int o = __offset(18); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int groupsLength() { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Group.Vector groupsVector() { return groupsVector(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.Group.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Group.Vector groupsVector(gg.generations.imct.swsh.flatbuffers.Gfbmdl.Group.Vector obj) { int o = __offset(18); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Mesh meshes(int j) { return meshes(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.Mesh(), j); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Mesh meshes(gg.generations.imct.swsh.flatbuffers.Gfbmdl.Mesh obj, int j) { int o = __offset(20); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int meshesLength() { int o = __offset(20); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Mesh.Vector meshesVector() { return meshesVector(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.Mesh.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Mesh.Vector meshesVector(gg.generations.imct.swsh.flatbuffers.Gfbmdl.Mesh.Vector obj) { int o = __offset(20); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Bone bones(int j) { return bones(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.Bone(), j); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Bone bones(gg.generations.imct.swsh.flatbuffers.Gfbmdl.Bone obj, int j) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int bonesLength() { int o = __offset(22); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Bone.Vector bonesVector() { return bonesVector(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.Bone.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.Bone.Vector bonesVector(gg.generations.imct.swsh.flatbuffers.Gfbmdl.Bone.Vector obj) { int o = __offset(22); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.CollisionGroup collisionGroups(int j) { return collisionGroups(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.CollisionGroup(), j); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.CollisionGroup collisionGroups(gg.generations.imct.swsh.flatbuffers.Gfbmdl.CollisionGroup obj, int j) { int o = __offset(24); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int collisionGroupsLength() { int o = __offset(24); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.CollisionGroup.Vector collisionGroupsVector() { return collisionGroupsVector(new gg.generations.imct.swsh.flatbuffers.Gfbmdl.CollisionGroup.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.Gfbmdl.CollisionGroup.Vector collisionGroupsVector(gg.generations.imct.swsh.flatbuffers.Gfbmdl.CollisionGroup.Vector obj) { int o = __offset(24); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static void startModel(FlatBufferBuilder builder) { builder.startTable(11); }
  public static void addVersion(FlatBufferBuilder builder, long version) { builder.addInt(0, (int) version, (int) 0L); }
  public static void addBounding(FlatBufferBuilder builder, int boundingOffset) { builder.addStruct(1, boundingOffset, 0); }
  public static void addTextureNames(FlatBufferBuilder builder, int textureNamesOffset) { builder.addOffset(2, textureNamesOffset, 0); }
  public static int createTextureNamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTextureNamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addShaderNames(FlatBufferBuilder builder, int shaderNamesOffset) { builder.addOffset(3, shaderNamesOffset, 0); }
  public static int createShaderNamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startShaderNamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addUnknown(FlatBufferBuilder builder, int unknownOffset) { builder.addOffset(4, unknownOffset, 0); }
  public static int createUnknownVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startUnknownVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMaterialNames(FlatBufferBuilder builder, int materialNamesOffset) { builder.addOffset(5, materialNamesOffset, 0); }
  public static int createMaterialNamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMaterialNamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMaterials(FlatBufferBuilder builder, int materialsOffset) { builder.addOffset(6, materialsOffset, 0); }
  public static int createMaterialsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMaterialsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addGroups(FlatBufferBuilder builder, int groupsOffset) { builder.addOffset(7, groupsOffset, 0); }
  public static int createGroupsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startGroupsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMeshes(FlatBufferBuilder builder, int meshesOffset) { builder.addOffset(8, meshesOffset, 0); }
  public static int createMeshesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMeshesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addBones(FlatBufferBuilder builder, int bonesOffset) { builder.addOffset(9, bonesOffset, 0); }
  public static int createBonesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startBonesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addCollisionGroups(FlatBufferBuilder builder, int collisionGroupsOffset) { builder.addOffset(10, collisionGroupsOffset, 0); }
  public static int createCollisionGroupsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startCollisionGroupsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endModel(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishModelBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedModelBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Model get(int j) { return get(new Model(), j); }
    public Model get(Model obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

