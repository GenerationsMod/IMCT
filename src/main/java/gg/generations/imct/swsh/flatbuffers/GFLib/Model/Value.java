// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.swsh.flatbuffers.GFLib.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Value extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static Value getRootAsValue(ByteBuffer _bb) { return getRootAsValue(_bb, new Value()); }
  public static Value getRootAsValue(ByteBuffer _bb, Value obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Value __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String valueName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer valueNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer valueNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public float value() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createValue(FlatBufferBuilder builder,
      int valueNameOffset,
      float value) {
    builder.startTable(2);
    Value.addValue(builder, value);
    Value.addValueName(builder, valueNameOffset);
    return Value.endValue(builder);
  }

  public static void startValue(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addValueName(FlatBufferBuilder builder, int valueNameOffset) { builder.addOffset(0, valueNameOffset, 0); }
  public static void addValue(FlatBufferBuilder builder, float value) { builder.addFloat(1, value, 0.0f); }
  public static int endValue(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Value get(int j) { return get(new Value(), j); }
    public Value get(Value obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

