// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.swsh.flatbuffers.GFLib.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ColOrder extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static ColOrder getRootAsColOrder(ByteBuffer _bb) { return getRootAsColOrder(_bb, new ColOrder()); }
  public static ColOrder getRootAsColOrder(ByteBuffer _bb, ColOrder obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ColOrder __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box box() { return box(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box box(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public long order(int j) { int o = __offset(6); return o != 0 ? (long)bb.getInt(__vector(o) + j * 4) & 0xFFFFFFFFL : 0; }
  public int orderLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public IntVector orderVector() { return orderVector(new IntVector()); }
  public IntVector orderVector(IntVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer orderAsByteBuffer() { return __vector_as_bytebuffer(6, 4); }
  public ByteBuffer orderInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 4); }

  public static void startColOrder(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addBox(FlatBufferBuilder builder, int boxOffset) { builder.addStruct(0, boxOffset, 0); }
  public static void addOrder(FlatBufferBuilder builder, int orderOffset) { builder.addOffset(1, orderOffset, 0); }
  public static int createOrderVector(FlatBufferBuilder builder, long[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt((int) data[i]); return builder.endVector(); }
  public static void startOrderVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endColOrder(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ColOrder get(int j) { return get(new ColOrder(), j); }
    public ColOrder get(ColOrder obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

