// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.swsh.flatbuffers.GFLib.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class GFBMDL_Plane extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static GFBMDL_Plane getRootAsGFBMDL_Plane(ByteBuffer _bb) { return getRootAsGFBMDL_Plane(_bb, new GFBMDL_Plane()); }
  public static GFBMDL_Plane getRootAsGFBMDL_Plane(ByteBuffer _bb, GFBMDL_Plane obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public GFBMDL_Plane __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String textureNames(int j) { int o = __offset(4); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int textureNamesLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public StringVector textureNamesVector() { return textureNamesVector(new StringVector()); }
  public StringVector textureNamesVector(StringVector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public String meshNames(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int meshNamesLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public StringVector meshNamesVector() { return meshNamesVector(new StringVector()); }
  public StringVector meshNamesVector(StringVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public long emptyVec(int j) { int o = __offset(8); return o != 0 ? (long)bb.getInt(__vector(o) + j * 4) & 0xFFFFFFFFL : 0; }
  public int emptyVecLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public IntVector emptyVecVector() { return emptyVecVector(new IntVector()); }
  public IntVector emptyVecVector(IntVector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer emptyVecAsByteBuffer() { return __vector_as_bytebuffer(8, 4); }
  public ByteBuffer emptyVecInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 4); }
  public String materialNames(int j) { int o = __offset(10); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int materialNamesLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public StringVector materialNamesVector() { return materialNamesVector(new StringVector()); }
  public StringVector materialNamesVector(StringVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material_Plane materials(int j) { return materials(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material_Plane(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material_Plane materials(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material_Plane obj, int j) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int materialsLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material_Plane.Vector materialsVector() { return materialsVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material_Plane.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material_Plane.Vector materialsVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material_Plane.Vector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh meshes(int j) { return meshes(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh meshes(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh obj, int j) { int o = __offset(14); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int meshesLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh.Vector meshesVector() { return meshesVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh.Vector meshesVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh.Vector obj) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape shapes(int j) { return shapes(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape shapes(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape obj, int j) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int shapesLength() { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape.Vector shapesVector() { return shapesVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape.Vector shapesVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape.Vector obj) { int o = __offset(16); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone_Plane skel(int j) { return skel(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone_Plane(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone_Plane skel(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone_Plane obj, int j) { int o = __offset(18); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int skelLength() { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone_Plane.Vector skelVector() { return skelVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone_Plane.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone_Plane.Vector skelVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone_Plane.Vector obj) { int o = __offset(18); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public long collisions(int j) { int o = __offset(20); return o != 0 ? (long)bb.getInt(__vector(o) + j * 4) & 0xFFFFFFFFL : 0; }
  public int collisionsLength() { int o = __offset(20); return o != 0 ? __vector_len(o) : 0; }
  public IntVector collisionsVector() { return collisionsVector(new IntVector()); }
  public IntVector collisionsVector(IntVector obj) { int o = __offset(20); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer collisionsAsByteBuffer() { return __vector_as_bytebuffer(20, 4); }
  public ByteBuffer collisionsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 4); }
  public long renderLayers(int j) { int o = __offset(22); return o != 0 ? (long)bb.getInt(__vector(o) + j * 4) & 0xFFFFFFFFL : 0; }
  public int renderLayersLength() { int o = __offset(22); return o != 0 ? __vector_len(o) : 0; }
  public IntVector renderLayersVector() { return renderLayersVector(new IntVector()); }
  public IntVector renderLayersVector(IntVector obj) { int o = __offset(22); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer renderLayersAsByteBuffer() { return __vector_as_bytebuffer(22, 4); }
  public ByteBuffer renderLayersInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 4); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box renderBox() { return renderBox(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box renderBox(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box obj) { int o = __offset(24); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void startGFBMDL_Plane(FlatBufferBuilder builder) { builder.startTable(11); }
  public static void addTextureNames(FlatBufferBuilder builder, int textureNamesOffset) { builder.addOffset(0, textureNamesOffset, 0); }
  public static int createTextureNamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTextureNamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMeshNames(FlatBufferBuilder builder, int meshNamesOffset) { builder.addOffset(1, meshNamesOffset, 0); }
  public static int createMeshNamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMeshNamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addEmptyVec(FlatBufferBuilder builder, int emptyVecOffset) { builder.addOffset(2, emptyVecOffset, 0); }
  public static int createEmptyVecVector(FlatBufferBuilder builder, long[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt((int) data[i]); return builder.endVector(); }
  public static void startEmptyVecVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMaterialNames(FlatBufferBuilder builder, int materialNamesOffset) { builder.addOffset(3, materialNamesOffset, 0); }
  public static int createMaterialNamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMaterialNamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMaterials(FlatBufferBuilder builder, int materialsOffset) { builder.addOffset(4, materialsOffset, 0); }
  public static int createMaterialsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMaterialsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMeshes(FlatBufferBuilder builder, int meshesOffset) { builder.addOffset(5, meshesOffset, 0); }
  public static int createMeshesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMeshesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addShapes(FlatBufferBuilder builder, int shapesOffset) { builder.addOffset(6, shapesOffset, 0); }
  public static int createShapesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startShapesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addSkel(FlatBufferBuilder builder, int skelOffset) { builder.addOffset(7, skelOffset, 0); }
  public static int createSkelVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSkelVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addCollisions(FlatBufferBuilder builder, int collisionsOffset) { builder.addOffset(8, collisionsOffset, 0); }
  public static int createCollisionsVector(FlatBufferBuilder builder, long[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt((int) data[i]); return builder.endVector(); }
  public static void startCollisionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addRenderLayers(FlatBufferBuilder builder, int renderLayersOffset) { builder.addOffset(9, renderLayersOffset, 0); }
  public static int createRenderLayersVector(FlatBufferBuilder builder, long[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt((int) data[i]); return builder.endVector(); }
  public static void startRenderLayersVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addRenderBox(FlatBufferBuilder builder, int renderBoxOffset) { builder.addStruct(10, renderBoxOffset, 0); }
  public static int endGFBMDL_Plane(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishGFBMDL_PlaneBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedGFBMDL_PlaneBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public GFBMDL_Plane get(int j) { return get(new GFBMDL_Plane(), j); }
    public GFBMDL_Plane get(GFBMDL_Plane obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

