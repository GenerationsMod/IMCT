// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.swsh.flatbuffers.GFLib.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class GFBMDL extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static GFBMDL getRootAsGFBMDL(ByteBuffer _bb) { return getRootAsGFBMDL(_bb, new GFBMDL()); }
  public static GFBMDL getRootAsGFBMDL(ByteBuffer _bb, GFBMDL obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public GFBMDL __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Info version() { return version(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Info()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Info version(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Info obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box boundingBox() { return boundingBox(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box boundingBox(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public String textureFiles(int j) { int o = __offset(8); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int textureFilesLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public StringVector textureFilesVector() { return textureFilesVector(new StringVector()); }
  public StringVector textureFilesVector(StringVector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public String vertexShaders(int j) { int o = __offset(10); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int vertexShadersLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public StringVector vertexShadersVector() { return vertexShadersVector(new StringVector()); }
  public StringVector vertexShadersVector(StringVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public String geometryShaders(int j) { int o = __offset(12); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int geometryShadersLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public StringVector geometryShadersVector() { return geometryShadersVector(new StringVector()); }
  public StringVector geometryShadersVector(StringVector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public String fragmentShaders(int j) { int o = __offset(14); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int fragmentShadersLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }
  public StringVector fragmentShadersVector() { return fragmentShadersVector(new StringVector()); }
  public StringVector fragmentShadersVector(StringVector obj) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material materials(int j) { return materials(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material materials(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material obj, int j) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int materialsLength() { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material.Vector materialsVector() { return materialsVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material.Vector materialsVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Material.Vector obj) { int o = __offset(16); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh mesh(int j) { return mesh(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh mesh(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh obj, int j) { int o = __offset(18); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int meshLength() { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh.Vector meshVector() { return meshVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh.Vector meshVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Mesh.Vector obj) { int o = __offset(18); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape shapes(int j) { return shapes(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape shapes(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape obj, int j) { int o = __offset(20); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int shapesLength() { int o = __offset(20); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape.Vector shapesVector() { return shapesVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape.Vector shapesVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Shape.Vector obj) { int o = __offset(20); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone skeleton(int j) { return skeleton(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone skeleton(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone obj, int j) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int skeletonLength() { int o = __offset(22); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone.Vector skeletonVector() { return skeletonVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone.Vector skeletonVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Bone.Vector obj) { int o = __offset(22); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.TransparencyGroupNode transparencygroup(int j) { return transparencygroup(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.TransparencyGroupNode(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.TransparencyGroupNode transparencygroup(gg.generations.imct.swsh.flatbuffers.GFLib.Model.TransparencyGroupNode obj, int j) { int o = __offset(24); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int transparencygroupLength() { int o = __offset(24); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.TransparencyGroupNode.Vector transparencygroupVector() { return transparencygroupVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.TransparencyGroupNode.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.TransparencyGroupNode.Vector transparencygroupVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.TransparencyGroupNode.Vector obj) { int o = __offset(24); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.RenderLayers renderLayers(int j) { return renderLayers(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.RenderLayers(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.RenderLayers renderLayers(gg.generations.imct.swsh.flatbuffers.GFLib.Model.RenderLayers obj, int j) { int o = __offset(26); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int renderLayersLength() { int o = __offset(26); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.RenderLayers.Vector renderLayersVector() { return renderLayersVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.RenderLayers.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.RenderLayers.Vector renderLayersVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.RenderLayers.Vector obj) { int o = __offset(26); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static void startGFBMDL(FlatBufferBuilder builder) { builder.startTable(12); }
  public static void addVersion(FlatBufferBuilder builder, int versionOffset) { builder.addStruct(0, versionOffset, 0); }
  public static void addBoundingBox(FlatBufferBuilder builder, int boundingBoxOffset) { builder.addStruct(1, boundingBoxOffset, 0); }
  public static void addTextureFiles(FlatBufferBuilder builder, int textureFilesOffset) { builder.addOffset(2, textureFilesOffset, 0); }
  public static int createTextureFilesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTextureFilesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addVertexShaders(FlatBufferBuilder builder, int vertexShadersOffset) { builder.addOffset(3, vertexShadersOffset, 0); }
  public static int createVertexShadersVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startVertexShadersVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addGeometryShaders(FlatBufferBuilder builder, int geometryShadersOffset) { builder.addOffset(4, geometryShadersOffset, 0); }
  public static int createGeometryShadersVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startGeometryShadersVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addFragmentShaders(FlatBufferBuilder builder, int fragmentShadersOffset) { builder.addOffset(5, fragmentShadersOffset, 0); }
  public static int createFragmentShadersVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startFragmentShadersVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMaterials(FlatBufferBuilder builder, int materialsOffset) { builder.addOffset(6, materialsOffset, 0); }
  public static int createMaterialsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMaterialsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMesh(FlatBufferBuilder builder, int meshOffset) { builder.addOffset(7, meshOffset, 0); }
  public static int createMeshVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMeshVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addShapes(FlatBufferBuilder builder, int shapesOffset) { builder.addOffset(8, shapesOffset, 0); }
  public static int createShapesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startShapesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addSkeleton(FlatBufferBuilder builder, int skeletonOffset) { builder.addOffset(9, skeletonOffset, 0); }
  public static int createSkeletonVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSkeletonVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTransparencygroup(FlatBufferBuilder builder, int transparencygroupOffset) { builder.addOffset(10, transparencygroupOffset, 0); }
  public static int createTransparencygroupVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTransparencygroupVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addRenderLayers(FlatBufferBuilder builder, int renderLayersOffset) { builder.addOffset(11, renderLayersOffset, 0); }
  public static int createRenderLayersVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startRenderLayersVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endGFBMDL(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishGFBMDLBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedGFBMDLBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public GFBMDL get(int j) { return get(new GFBMDL(), j); }
    public GFBMDL get(GFBMDL obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

