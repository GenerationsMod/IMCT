// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.swsh.flatbuffers.GFLib.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class GFBMDLi extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static GFBMDLi getRootAsGFBMDLi(ByteBuffer _bb) { return getRootAsGFBMDLi(_bb, new GFBMDLi()); }
  public static GFBMDLi getRootAsGFBMDLi(ByteBuffer _bb, GFBMDLi obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public GFBMDLi __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Info version() { return version(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Info()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Info version(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Info obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box boundingBox() { return boundingBox(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box boundingBox(gg.generations.imct.swsh.flatbuffers.GFLib.Model.Box obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.ReproMesh repromesh(int j) { return repromesh(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.ReproMesh(), j); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.ReproMesh repromesh(gg.generations.imct.swsh.flatbuffers.GFLib.Model.ReproMesh obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int repromeshLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.ReproMesh.Vector repromeshVector() { return repromeshVector(new gg.generations.imct.swsh.flatbuffers.GFLib.Model.ReproMesh.Vector()); }
  public gg.generations.imct.swsh.flatbuffers.GFLib.Model.ReproMesh.Vector repromeshVector(gg.generations.imct.swsh.flatbuffers.GFLib.Model.ReproMesh.Vector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static void startGFBMDLi(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addVersion(FlatBufferBuilder builder, int versionOffset) { builder.addStruct(0, versionOffset, 0); }
  public static void addBoundingBox(FlatBufferBuilder builder, int boundingBoxOffset) { builder.addStruct(1, boundingBoxOffset, 0); }
  public static void addRepromesh(FlatBufferBuilder builder, int repromeshOffset) { builder.addOffset(2, repromeshOffset, 0); }
  public static int createRepromeshVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startRepromeshVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endGFBMDLi(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishGFBMDLiBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedGFBMDLiBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public GFBMDLi get(int j) { return get(new GFBMDLi(), j); }
    public GFBMDLi get(GFBMDLi obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

