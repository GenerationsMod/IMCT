// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.imct.read.swsh.flatbuffers.Gfbmdl;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class CollisionGroup extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static CollisionGroup getRootAsCollisionGroup(ByteBuffer _bb) { return getRootAsCollisionGroup(_bb, new CollisionGroup()); }
  public static CollisionGroup getRootAsCollisionGroup(ByteBuffer _bb, CollisionGroup obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public CollisionGroup __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long boneIndex() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long unknown1() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long boneChildren(int j) { int o = __offset(8); return o != 0 ? (long)bb.getInt(__vector(o) + j * 4) & 0xFFFFFFFFL : 0; }
  public int boneChildrenLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public IntVector boneChildrenVector() { return boneChildrenVector(new IntVector()); }
  public IntVector boneChildrenVector(IntVector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer boneChildrenAsByteBuffer() { return __vector_as_bytebuffer(8, 4); }
  public ByteBuffer boneChildrenInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 4); }
  public gg.generations.imct.read.swsh.flatbuffers.Gfbmdl.BoundingBox bounding() { return bounding(new gg.generations.imct.read.swsh.flatbuffers.Gfbmdl.BoundingBox()); }
  public gg.generations.imct.read.swsh.flatbuffers.Gfbmdl.BoundingBox bounding(gg.generations.imct.read.swsh.flatbuffers.Gfbmdl.BoundingBox obj) { int o = __offset(10); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void startCollisionGroup(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addBoneIndex(FlatBufferBuilder builder, long boneIndex) { builder.addInt(0, (int) boneIndex, (int) 0L); }
  public static void addUnknown1(FlatBufferBuilder builder, long unknown1) { builder.addInt(1, (int) unknown1, (int) 0L); }
  public static void addBoneChildren(FlatBufferBuilder builder, int boneChildrenOffset) { builder.addOffset(2, boneChildrenOffset, 0); }
  public static int createBoneChildrenVector(FlatBufferBuilder builder, long[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt((int) data[i]); return builder.endVector(); }
  public static void startBoneChildrenVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addBounding(FlatBufferBuilder builder, int boundingOffset) { builder.addStruct(3, boundingOffset, 0); }
  public static int endCollisionGroup(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public CollisionGroup get(int j) { return get(new CollisionGroup(), j); }
    public CollisionGroup get(CollisionGroup obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

